plugins { id 'org.beryx.runtime' version '1.13.0' }
apply plugin: "java"

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = ["src/"]
sourceSets.main.resources.srcDirs = ["../assets"]


mainClassName = "com.mygdx.moos.DesktopLauncher"
def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)

project.ext.assetsDir = new File("../assets")

import org.gradle.internal.os.OperatingSystem

task runGame(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    destinationDirectory = file("$buildDir/lib")
}

jpackageImage.dependsOn dist

dist.dependsOn classes

eclipse.project.name = appName + "-desktop"


runtime {

    options = ['--strip-debug',
               '--compress', '2',
               '--no-header-files',
               '--no-man-pages',
               '--strip-native-commands',
               '--vm', 'server']
    modules = ['java.base' ,
               'java.desktop',
               'jdk.unsupported']
    distDir = file(buildDir)

    jpackage {
        jpackageHome = javaHome.getOrElse("/users/mannilma/.jdks/temurin-17.0.7")
        mainJar = dist.archiveFileName.get()
        //imageOptions = ["--icon", file("../icons/icon.ico")]
        imageName = "Fish4Cash"
    }
}


/*
runtime {
    options.set(['--strip-debug',
                 '--compress', '2',
                 '--no-header-files',
                 '--no-man-pages',
                 '--strip-native-commands',
                 '--vm', 'server'])
// you could very easily need more modules than this one.
// use the lwjgl3:suggestModules task to see which modules may be needed.
    modules.set([
            'java.base' ,
            'java.desktop',
            'jdk.unsupported'
    ])

    distDir.set(file(buildDir))
    jpackage {
        imageName = "fish4cash"
// you can set this to false if you want to build an installer, or keep it as true to build just an app.
        skipInstaller = true
// this may need to be set to a different path if your JAVA_HOME points to a low JDK version.
        jpackageHome = javaHome.getOrElse("/users/mannilma/.jdks/temurin-17.0.7")
        mainJar = dist.archiveFileName.get()
        imageOptions = ["--icon", "icons/icon.ico"]

    }
}


 */


